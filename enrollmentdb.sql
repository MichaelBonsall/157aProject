-- MySQL Script generated by MySQL Workbench
-- Sun Nov 26 13:34:14 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema EnrollmentDB
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema EnrollmentDB
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `EnrollmentDB` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema new_schema1
-- -----------------------------------------------------
USE `EnrollmentDB` ;

-- -----------------------------------------------------
-- Table `EnrollmentDB`.`Time`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EnrollmentDB`.`Time` ;

CREATE TABLE IF NOT EXISTS `EnrollmentDB`.`Time` (
  `TimeID` INT NOT NULL AUTO_INCREMENT,
  `StartTime` TIME NOT NULL,
  `EndTime` TIME NOT NULL,
  `Days` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`TimeID`),
  UNIQUE INDEX `TimeID_UNIQUE` (`TimeID` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EnrollmentDB`.`Location`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EnrollmentDB`.`Location` ;

CREATE TABLE IF NOT EXISTS `EnrollmentDB`.`Location` (
  `LocationID` INT NOT NULL,
  `Building` VARCHAR(45) NOT NULL,
  `RoomNumber` VARCHAR(45) NULL,
  PRIMARY KEY (`LocationID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EnrollmentDB`.`Major`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EnrollmentDB`.`Major` ;

CREATE TABLE IF NOT EXISTS `EnrollmentDB`.`Major` (
  `MajorName` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`MajorName`),
  UNIQUE INDEX `Name_UNIQUE` (`MajorName` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EnrollmentDB`.`Faculty`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EnrollmentDB`.`Faculty` ;

CREATE TABLE IF NOT EXISTS `EnrollmentDB`.`Faculty` (
  `FacultyID` INT NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  `Classes` VARCHAR(45) NULL,
  PRIMARY KEY (`FacultyID`),
  UNIQUE INDEX `FacultyID_UNIQUE` (`FacultyID` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EnrollmentDB`.`Department`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EnrollmentDB`.`Department` ;

CREATE TABLE IF NOT EXISTS `EnrollmentDB`.`Department` (
  `DepartmentName` VARCHAR(255) NOT NULL,
  `Faculty` INT NULL DEFAULT NULL,
  `Majors` VARCHAR(255) NULL,
  PRIMARY KEY (`DepartmentName`),
  UNIQUE INDEX `Name_UNIQUE` (`DepartmentName` ASC) VISIBLE,
  INDEX `FacultyIndex` (`Faculty` ASC) INVISIBLE,
  INDEX `DepartmentToMajor_idx` (`Majors` ASC) VISIBLE,
  CONSTRAINT `DepartmentToFaculty`
    FOREIGN KEY (`Faculty`)
    REFERENCES `EnrollmentDB`.`Faculty` (`FacultyID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `DepartmentToMajor`
    FOREIGN KEY (`Majors`)
    REFERENCES `EnrollmentDB`.`Major` (`MajorName`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EnrollmentDB`.`Class`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EnrollmentDB`.`Class` ;

CREATE TABLE IF NOT EXISTS `EnrollmentDB`.`Class` (
  `ClassNumber` INT NOT NULL,
  `Location` INT NOT NULL,
  `Time` INT NULL,
  `ClassName` VARCHAR(255) NOT NULL,
  `Department` VARCHAR(45) NOT NULL,
  `Instructor` INT NULL,
  `Capacity` INT NOT NULL,
  INDEX `TimeIndex` (`Time` ASC) VISIBLE,
  INDEX `InstructorIndex` (`Instructor` ASC) VISIBLE,
  INDEX `ClassToDepartment_idx` (`Department` ASC) VISIBLE,
  PRIMARY KEY (`ClassNumber`),
  INDEX `LocationIndex` (`Location` ASC) VISIBLE,
  CONSTRAINT `ClassToFaculty`
    FOREIGN KEY (`Instructor`)
    REFERENCES `EnrollmentDB`.`Faculty` (`FacultyID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ClassToDepartment`
    FOREIGN KEY (`Department`)
    REFERENCES `EnrollmentDB`.`Department` (`DepartmentName`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ClassToLocation`
    FOREIGN KEY (`Location`)
    REFERENCES `EnrollmentDB`.`Location` (`LocationID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ClassToTime`
    FOREIGN KEY (`Time`)
    REFERENCES `EnrollmentDB`.`Time` (`TimeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EnrollmentDB`.`Student`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EnrollmentDB`.`Student` ;

CREATE TABLE IF NOT EXISTS `EnrollmentDB`.`Student` (
  `StudentID` INT NOT NULL,
  `GPA` DOUBLE NULL,
  `Classes` INT NULL,
  `FeesDue` DOUBLE NOT NULL,
  `FullName` VARCHAR(255) NOT NULL,
  `Major` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`StudentID`),
  UNIQUE INDEX `StudentID_UNIQUE` (`StudentID` ASC) INVISIBLE,
  INDEX `Major` (`Major` ASC) VISIBLE,
  INDEX `StudentToClass_idx` (`Classes` ASC) VISIBLE,
  CONSTRAINT `StudentToClass`
    FOREIGN KEY (`Classes`)
    REFERENCES `EnrollmentDB`.`Class` (`ClassNumber`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `StudentToMajor`
    FOREIGN KEY (`Major`)
    REFERENCES `EnrollmentDB`.`Major` (`MajorName`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EnrollmentDB`.`ClassSchedule`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EnrollmentDB`.`ClassSchedule` ;

CREATE TABLE IF NOT EXISTS `EnrollmentDB`.`ClassSchedule` (
  `ClassScheduleID` INT NOT NULL,
  `ClassID` INT NOT NULL,
  `LocationID` INT NOT NULL,
  `TimeID` INT NOT NULL,
  INDEX `LocationIDIndex` (`LocationID` ASC) INVISIBLE,
  INDEX `TimeIDIndex` (`TimeID` ASC) VISIBLE,
  INDEX `ClassIDIndex` (`ClassID` ASC) INVISIBLE,
  PRIMARY KEY (`ClassScheduleID`, `ClassID`, `LocationID`, `TimeID`),
  CONSTRAINT `ClassScheduleToLocation`
    FOREIGN KEY (`LocationID`)
    REFERENCES `EnrollmentDB`.`Location` (`LocationID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ClassScheduleToTime`
    FOREIGN KEY (`TimeID`)
    REFERENCES `EnrollmentDB`.`Time` (`TimeID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ClassScheduleToClass`
    FOREIGN KEY (`ClassID`)
    REFERENCES `EnrollmentDB`.`Class` (`ClassNumber`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `EnrollmentDB`.`Enrollment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EnrollmentDB`.`Enrollment` ;

CREATE TABLE IF NOT EXISTS `EnrollmentDB`.`Enrollment` (
  `StudentID` INT NOT NULL,
  `ClassID` INT NOT NULL,
  PRIMARY KEY (`StudentID`),
  INDEX `ClassIDIndex` (`ClassID` ASC) VISIBLE,
  CONSTRAINT `EnrollmentToStudent`
    FOREIGN KEY (`StudentID`)
    REFERENCES `EnrollmentDB`.`Student` (`StudentID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `EnrollmentToClass`
    FOREIGN KEY (`ClassID`)
    REFERENCES `EnrollmentDB`.`Class` (`ClassNumber`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `EnrollmentDB` ;

-- -----------------------------------------------------
-- Placeholder table for view `EnrollmentDB`.`Student View`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EnrollmentDB`.`Student View` (`StudentID` INT, `GPA` INT, `Classes` INT, `FeesDue` INT, `FullName` INT, `Major` INT, `ClassNumber` INT, `ClassName` INT, `Department` INT, `Instructor` INT, `Capacity` INT, `Building` INT, `RoomNumber` INT, `StartTime` INT, `EndTime` INT, `Days` INT);

-- -----------------------------------------------------
-- Placeholder table for view `EnrollmentDB`.`Faculty View`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EnrollmentDB`.`Faculty View` (`FacultyID` INT, `Name` INT, `ClassNumber` INT, `ClassName` INT, `Department` INT, `Capacity` INT, `Building` INT, `RoomNumber` INT, `StartTime` INT, `EndTime` INT, `Days` INT);

-- -----------------------------------------------------
-- Placeholder table for view `EnrollmentDB`.`Admin View`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `EnrollmentDB`.`Admin View` (`StudentID` INT, `FullName` INT, `MajorName` INT, `GPA` INT, `FeesDue` INT);

-- -----------------------------------------------------
-- View `EnrollmentDB`.`Student View`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EnrollmentDB`.`Student View`;
DROP VIEW IF EXISTS `EnrollmentDB`.`Student View` ;
USE `EnrollmentDB`;
CREATE  OR REPLACE VIEW `Student View` AS  
    SELECT Student.*, Class.ClassNumber, Class.ClassName,  Class.Department, Class.Instructor, Class.Capacity, Location.Building, Location.RoomNumber, Time.StartTime, Time.EndTime, Time.Days  FROM Student, Class, Location, `Time`, Major;  #temp select;

-- -----------------------------------------------------
-- View `EnrollmentDB`.`Faculty View`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EnrollmentDB`.`Faculty View`;
DROP VIEW IF EXISTS `EnrollmentDB`.`Faculty View` ;
USE `EnrollmentDB`;
CREATE  OR REPLACE VIEW `Faculty View` AS
	SELECT Faculty.FacultyID, Faculty.`Name`, Class.ClassNumber, Class.ClassName,  Class.Department, Class.Capacity, Location.Building, Location.RoomNumber, `Time`.StartTime, `Time`.EndTime, `Time`.Days FROM Student, Faculty, Location, `Time`, Class WHERE Faculty.FacultyID = Class.Instructor;

-- -----------------------------------------------------
-- View `EnrollmentDB`.`Admin View`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `EnrollmentDB`.`Admin View`;
DROP VIEW IF EXISTS `EnrollmentDB`.`Admin View` ;
USE `EnrollmentDB`;
CREATE  OR REPLACE VIEW `Admin View` AS
	SELECT Student.StudentID, Student.FullName, Major.*, Student.GPA, Student.FeesDue FROM Student, Major;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
